name: Terraform Workspace CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [development, staging, production]
    
    defaults:
      run:
       shell: bash

    env:
      TF_WORKSPACE: ${{ matrix.environment }}
      TF_RESOURCE_GROUP: ${{ secrets.TF_RESOURCE_GROUP }}
      TF_STORAGE_ACCOUNT: ${{ secrets.TF_STORAGE_ACCOUNT }}
      #TF_CONTAINER_NAME: ${{ secrets.TF_CONTAINER_NAME }}
      TF_ACCESS_KEY: ${{ secrets.TF_ACCESS_KEY }}

    steps:
      # Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      # Authenticate with Azure
      - name: Configure Azure Credentials
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
          allow-no-subscriptions: false
          audience: api://AzureADTokenExchange
          auth-type: SERVICE_PRINCIPAL
          environment: azurecloud

      # Initialize Terraform Backend
      - name: Initialize Terraform
        run: |
          terraform init \
              -backend-config="resource_group_name=${{ env.TF_RESOURCE_GROUP }}" \
              -backend-config="storage_account_name=${{ env.TF_STORAGE_ACCOUNT }}" \
              -backend-config="container_name=${{ env.TF_WORKSPACE }}" \
              -backend-config="key=${{ env.TF_WORKSPACE }}.tfstate" \
              -backend-config="access_key=${{ env.TF_ACCESS_KEY }}"

      # Create or Select Workspace
      - name: Create or Select Terraform Workspace
        run: |
          if ! terraform workspace list | grep -q "^${{ env.TF_WORKSPACE }}$"; then
            terraform workspace new ${{ env.TF_WORKSPACE }}
          fi
          unset TF_WORKSPACE
          terraform workspace select ${{ env.TF_WORKSPACE }}
      
          
    

      # Terraform Validate
      - name: Validate Terraform
        run: terraform validate

      # Terraform Plan
      - name: Plan Terraform
        run: |
          terraform plan \
            -out=${{ env.TF_WORKSPACE }}.tfplan \
            -var-file="${{ env.TF_WORKSPACE }}.terraform.tfvars"

      # Terraform Apply
      - name: Apply Terraform
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve ${{ env.TF_WORKSPACE }}.tfplan
