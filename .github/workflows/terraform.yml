name: Terraform CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  id-token: write
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.0
    
    - name: Validate Credentials Input
      run: |
        if [ -z "${{ secrets.AZURE_CREDENTIALS }}" ]; then
          echo "AZURE_CREDENTIALS secret is not set or is empty!"
          exit 1
        fi
      

    - name: Configure Azure credentials
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: true
        environment: azurecloud
        allow-no-subscriptions: false
        audience: api://AzureADTokenExchange
        auth-type: SERVICE_PRINCIPAL

    - name: Initialize Terraform
      run: terraform init -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP }}" \
                           -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT }}" \
                           -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
                           -backend-config="key=${{ secrets.ENVIRONMENT }}.tfstate"

    - name: Verify Terraform State File
      run: terraform show -json > statefile.json

    - name: Validate State Environment
      run: |
        ENVIRONMENT=$(cat statefile.json | jq -r '.values.outputs.environment.value')
        if [ "$ENVIRONMENT" != "${{ secrets.ENVIRONMENT }}" ]; then
          echo "Error: State file environment ($ENVIRONMENT) does not match (${{ secrets.ENVIRONMENT }})."
          exit 1
        fi

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -out=tfplan

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with: 
        name: tfplan
        path: |
            tfplan


  Deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Get build artifacts
      uses: actions/download-artifact@v3
      with:
        name: tfplan
    
    - name: Initialize Terraform
      run: terraform init -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP }}" \
                             -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT }}" \
                             -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
                             -backend-config="key=${{ secrets.ENVIRONMENT }}.tfstate"
                             
    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
      env:
        TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        TF_VAR_client_id: ${{ secrets.AZURE_CLIENT_ID }}
        TF_VAR_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        TF_VAR_tenant_id: ${{ secrets.AZURE_TENANT_ID }}

    - name: Cleanup Terraform Plan
      run: rm -f tfplan
